syntax = "proto3";

package objectstore;

// Object Control Protocol

message PullRequest {
  bytes object_id = 1;
  bytes puller_ip = 2;
}

message PullReply {
  bool ok = 1;
}

message ReduceToRequest {
  bytes reduction_id = 1;
  oneof reduction_source {
    bytes src_object_id = 2;
  }
  repeated bytes dst_object_ids = 3;
  bytes dst_address = 4;
  bool is_endpoint = 5;
}

message ReduceToReply {
  bool ok = 1;
}

service ObjectStore {
  rpc Pull(PullRequest) returns (PullReply);
  rpc ReduceTo(ReduceToRequest) returns (ReduceToReply);
}

// Object Writer Protocol

message ReceiveObjectRequest {
  bytes object_id = 1;
  int64 object_size = 2;
}

message ReceiveAndReduceObjectRequest {
  bytes reduction_id = 1;
  repeated bytes object_ids = 2;
  bool is_endpoint = 3;
}

message ObjectWriterRequest {
  oneof message_type {
    ReceiveObjectRequest receive_object = 1;
    ReceiveAndReduceObjectRequest receive_and_reduce_object = 2;
  }
}

// Notification Protocol

message SubscriptionRequest {
  bytes subscriber_ip = 1;
  bytes object_id = 2;
}

message SubscriptionReply {
  bool ok = 1;
}

message UnsubscriptionRequest {
  bytes unsubscriber_ip = 1;
  bytes object_id = 2;
}

message UnsubscriptionReply {
  bool ok = 1;
}

message ObjectCompleteRequest{
    bytes object_id = 1;
}

message ObjectCompleteReply {
    bool ok = 1;
}

message ObjectIsReadyRequest{
      bytes object_id = 1;
}

message ObjectIsReadyReply {
      bool ok = 1;
}

service NotificationServer {
  rpc Subscribe(SubscriptionRequest) returns (SubscriptionReply);
  rpc Unsubscribe(UnsubscriptionRequest) returns (UnsubscriptionReply);
  rpc ObjectComplete(ObjectCompleteRequest) returns (ObjectCompleteReply);
}

service NotificationListener {
  rpc ObjectIsReady(ObjectIsReadyRequest) returns (ObjectIsReadyReply);
}


