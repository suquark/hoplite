syntax = "proto3";

package objectstore;

// Object Control Protocol

message PullRequest {
  bytes object_id = 1;
  bytes puller_ip = 2;
  int64 offset = 3;
}

message PullReply {
  bool ok = 1;
}

message ReduceToRequest {
  bytes reduction_id = 1;
  oneof reduction_source {
    bytes src_object_id = 2;
  }
  repeated bytes dst_object_ids = 3;
  bytes dst_address = 4;
  bool is_endpoint = 5;
}

message ReduceToReply {
  bool ok = 1;
}

message RedirectReduceRequest {
  bytes reduction_id = 1;
  repeated bytes object_ids = 2;
  int64 num_reduce_objects = 3;
}

message RedirectReduceReply {
  bool ok = 1;
}

message RemoteGetReducedObjectsRequest {
  bytes reduction_id = 1;
}

message RemoteGetReducedObjectsReply {
  repeated bytes object_ids = 2;
}

service ObjectStore {
  rpc Pull(PullRequest) returns (PullReply);
  rpc ReduceTo(ReduceToRequest) returns (ReduceToReply);
  rpc RedirectReduce(RedirectReduceRequest) returns (RedirectReduceReply);
  rpc RemoteGetReducedObjects(RemoteGetReducedObjectsRequest)
      returns (RemoteGetReducedObjectsReply);
}

// Object Writer Protocol

message ReceiveObjectRequest {
  bytes object_id = 1;
  uint64 object_size = 2;
}

message ReceiveAndReduceObjectRequest {
  bytes reduction_id = 1;
  repeated bytes object_ids = 2;
  bool is_endpoint = 3;
}

message ObjectWriterRequest {
  oneof message_type {
    ReceiveObjectRequest receive_object = 1;
    ReceiveAndReduceObjectRequest receive_and_reduce_object = 2;
  }
}

// Notification Protocol

message BarrierRequest {
  int32 num_of_nodes = 1;
}

message BarrierReply {
}

message WriteLocationRequest {
  bytes object_id = 1;
  bytes sender_ip = 2;
  bool finished = 3;
  uint64 object_size = 4;
  oneof has_inband_data {
    bytes inband_data = 5;
  }
}

message WriteLocationReply {
  bool ok = 1;
}

message GetLocationSyncRequest {
  bytes object_id = 1;
  bool occupying = 2;
}

message GetLocationSyncReply {
  bytes sender_ip = 1;
  uint64 object_size = 2;
  bytes inband_data = 3;
}

message GetLocationAsyncRequest {
  repeated bytes object_ids = 1;
  bytes receiver_ip = 2;
  bytes query_id = 3;
  bool occupying = 4;
}

message GetLocationAsyncReply {
  bool ok = 1;
}

message GetLocationAsyncAnswerRequest {
  message ObjectInfo {
    bytes object_id = 1;
    bytes sender_ip = 2;
    bytes query_id = 3;
    int64 object_size = 4;
    bytes inband_data = 5;
  }
  repeated ObjectInfo objects = 1;
}

message GetLocationAsyncAnswerReply {
  bool ok = 1;
}

message ConnectRequest {
  bytes sender_ip = 1;
}

message ConnectReply {}

message ConnectListenerRequest {}

message ConnectListenerReply {}

message ExitRequest {
  bytes ip = 1;
}

message ExitReply {
  bool ok = 1;
}

service NotificationServer {
  rpc Barrier(BarrierRequest) returns (BarrierReply);
  rpc Exit(ExitRequest) returns (ExitReply);
  rpc Connect(ConnectRequest) returns (ConnectReply);
  rpc WriteLocation(WriteLocationRequest) returns (WriteLocationReply);
  rpc GetLocationSync(GetLocationSyncRequest) returns (GetLocationSyncReply);
  rpc GetLocationAsync(GetLocationAsyncRequest) returns (GetLocationAsyncReply);
}

service NotificationListener {
  rpc ConnectListener(ConnectListenerRequest) returns (ConnectListenerReply);
  rpc GetLocationAsyncAnswer(GetLocationAsyncAnswerRequest) returns (GetLocationAsyncAnswerReply);
}


